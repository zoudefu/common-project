1.实体属性创建时间上增加 
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")
    @TableField(value = "create_time", fill = FieldFill.INSERT)
2.实体属性更新时间上增加
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")
    @TableField(value = "update_time", fill = FieldFill.INSERT_UPDATE)
3. 逻辑删除实体属性上增加(如果逻辑字段未生效确认字段默认是否是0)
    @TableField("is_del")
    @TableLogic(value = "0", delval = "1")
4. 创建表时基本字段
    DROP TABLE IF EXISTS `table_name`;
    CREATE TABLE `table_name`  (
  `id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `is_del` tinyint(2) NULL DEFAULT 0 COMMENT '删除标识;0:有效;1:逻辑删除',
  `create_user_id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '创建人ID',
  `create_user` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '创建人',
  `update_user_id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '修改人ID',
  `update_user` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '修改人',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
   PRIMARY KEY (`id`) USING BTREE
)  ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '记得修改表说明' ROW_FORMAT = Dynamic;
5.自己的查询分页
Serverce   
    @Override
    public  IPage<ZgztProjectSnapshot> selectActualPage(Page<ZgztProjectSnapshot> page,
            ZgztProjectSnapshot zgztProjectSnapshot) {
        SnapshotDto  snapshtoDto=new SnapshotDto();
        snapshtoDto.setCurrentPageNo(page.getCurrent()-1);
        snapshtoDto.setPageSize(page.getSize());
        snapshtoDto.setOther(zgztProjectSnapshot.getOther());
        if(zgztProjectSnapshot.getStatus()!=null){
        snapshtoDto.setStatus(zgztProjectSnapshot.getStatus());
        }
        if(zgztProjectSnapshot.getArea()!=null){
        snapshtoDto.setAera(zgztProjectSnapshot.getArea());
        }
        if(StringUtils.isNotBlank(zgztProjectSnapshot.getProjectNos())){
            snapshtoDto.setProjectNos(Arrays.asList(zgztProjectSnapshot.getProjectNos().split(",")));
            }
        List<ZgztProjectSnapshot>  records=zgztProjectSnapshotMapper.selectProjectByParam(snapshtoDto);
        Integer  total=zgztProjectSnapshotMapper.countProjectByParam(snapshtoDto);
        page.setRecords(records);
        page.setTotal(total);
        return page;
    }
Dao 接口
    public List<ZgztProjectSnapshot> selectProjectByParam(@Param("snapshotDto")SnapshotDto snapshotDto);
    public Integer countProjectByParam(@Param("snapshotDto")SnapshotDto snapshotDto);
Dao xml
	<select id="countProjectByParam"  resultType="java.lang.Integer">
		select
		control_no,
		project_name
		from
		zy_project_info project
		where project.is_delete_=0 
		<if
			test="null != snapshotDto.projectNos and snapshotDto.projectNos.size()>0">
		and
		 project.control_no in
			<foreach item="item" index="index" collection="snapshotDto.projectNos"
				open="(" separator="," close=")">
				#{item}
			</foreach>

		</if>
		limit   #{snapshotDto.currentPageNo},#{snapshotDto.pageSize}
	</select>
	<select id="countProjectByParam"  resultType="java.lang.Integer">
		select
		count(control_no)
		from
		zy_project_info project
		where project.is_delete_=0 
		<if
			test="null != snapshotDto.projectNos and snapshotDto.projectNos.size()>0">
		and
		 project.control_no in
			<foreach item="item" index="index" collection="snapshotDto.projectNos"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>
	
	6.字符串类型 改成like 模糊查询。
	7.@TableField(exist = false) 标注非数据库属性字段。
	8.@ApiParam(value = "用户名称", required = false) @RequestHeader final String userName,
	 if (StringUtils.isEmpty(pmsComputerRoom.getId())) {
                    pmsComputerRoom.setCreateTime(LocalDateTime.now());
                    pmsComputerRoom.setCreateUserEmail(userName);
                } else {
                    pmsComputerRoom.setUpdateTime(LocalDateTime.now());
                    pmsComputerRoom.setUpdateUserEmail(userName);
                }
                
     9.保存 参数@RequesBody
     
    