eureka.client.service-url.defaultZone=http://ip:port/eureka/
server.port=8091
server.address=0.0.0.0
eureka.client.healthcheck.enabled=true
eureka.instance.prefer-ip-address=true
spring.application.name=common-project
#健康检查
# 基础路径设置，兼容springboot 1.5.x 和 2.x.x
management.endpoints.web.base-path=/actuator
management.context-path=/actuator
# 设置暴露端点（prometheus端点依赖监控能力集成）
management.endpoints.web.exposure.include=health,prometheus,info
# 2.x.x 暴露所有端点
management.endpoints.web.exposure.include=*
# 可选：监控检查是否检查如下连接配置信息
management.health.mail.enabled=false
management.health.redis.enabled=false

#配置undertow
# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
# 不要设置过大，如果过大，启动项目会报错：打开文件数过多
# CPU有几核，就填写几。
server.undertow.io-threads=8
# 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
# 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
server.undertow.worker-threads=64
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
server.undertow.buffer-size=1024
# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region，Deprecated
# server.undertow.buffers-per-region=1024
# 是否分配的直接内存(NIO直接分配的堆外内存)
server.undertow.direct-buffers=true

#mysql
spring.datasource.url=jdbc:mysql://ip:port/databaseName?serverTimezone=Asia/Shanghai&&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.tomcat.initial-size=5
spring.datasource.tomcat.min-idle=5
spring.datasource.tomcat.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.tomcat.max-wait=60000

# 上传文件设置
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.location=D:/tmp

mybatis-plus.mapper-locations=classpath:mapper/*/*Mapper.xml
#实体扫描，多个package用逗号或者分号分隔
mybatis-plus.type-aliases-package=com.common.project.*.entity
#主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
mybatis-plus.global-config.id-type=0
#字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
mybatis-plus.global-config.field-strategy=0
#驼峰下划线转换
mybatis-plus.global-config.db-column-underline=true
#刷新mapper 调试神器
mybatis-plus.global-config.refresh-mapper=false
#逻辑删除配置（下面3个配置）
mybatis-plus.global-config.logic-delete-value=1
mybatis-plus.global-config.logic-not-delete-value=0
#逻辑删除配置
mybatis-plus.global-config.db-config.logic-delete-value=1
mybatis-plus.global-config.db-config.logic-not-delete-value=0
#mybatis-plus.global-config.sql-injector=com.baomidou.mybatisplus.mapper.LogicSqlInjector
#配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.cache-enabled=false
#配置JdbcTypeForNull
mybatis-plus.configuration.jdbc-type-for-null=null
#放开该注释，将打印sql
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

#redis配置
#redis
spring.redis.host=ip
spring.redis.port=port
spring.redis.password=password
spring.redis.database=1
spring.redis.timeout=6000
spring.redis.jedis.pool.min-idle=10
spring.redis.jedis.pool.max-idle=500
spring.redis.jedis.pool.max-active=100
spring.redis.jedis.pool.max-wait=-1

# 防止连接超时
feign.client.config.default.connect-timeout=30000
feign.client.config.default.read-timeout=30000

#任务调度
#任务调度服务地址以及端口
xxl.job.admin.addresses=http://ip:port/xxl-job-admin
#执行名称
xxl.job.executor.appname=appname
xxl.job.executor.address=
#自动获取
xxl.job.executor.ip=
xxl.job.executor.port=9998
### xxl-job, access token
xxl.job.accessToken=
#日志输出地址
xxl.job.executor.logpath=D:/logs/xxl-job-log
#日志保存天数：值大于3时生效，启用执行器Log文件定期清理功能，否则不生效
xxl.job.executor.logretentiondays=-1

logging.config=classpath:log4j2-spring.xml

# 邮箱配置
spring.mail.host=smtp.exmail.qq.com
spring.mail.port=465
spring.mail.username=qq.com
spring.mail.password=Redmine2
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.auth=true
####MinIO####
minio.endpoint=http://ip:9200
minio.accessKey=minio
minio.secretKey=miniostorage
minio.bucket.chunk=chunk
####MinIO####
##################搜索es#######################
elasticsearch.host=ip:9291
elasticsearch.username=
elasticsearch.password=
#elasticsearch的健康检查地址
spring.elasticsearch.rest.uris=http://ip:9291
management.health.elasticsearch.enabled=false
##################搜索es#######################
##################ThreadPoolTaskExecutor 线程配置#######################
# 异步线程配置
# 配置核心线程数
async.executor.thread.core_pool_size = 30
# 配置最大线程数
async.executor.thread.max_pool_size = 30
# 配置队列大小
async.executor.thread.queue_capacity = 99988
# 配置线程池中的线程的名称前缀
async.executor.thread.name.prefix = async-importDB-
##################ThreadPoolTaskExecutor 线程配置#######################